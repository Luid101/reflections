How did viewing a diff between two versions of a file help you see the bug that was introduced?

  It didn't help. The amount of changes between both files made it impossible to see which word had the error.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

  It could help you correct mistakes in new versions.
  It could also help you in creating completely new variations of your project off of existing older versions.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

  Pros:
  All your commits make logical sense and are easier to use.

  Cons:
  You might forget to commit when you need too.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

  Because programs like github want to support the idea of saving versions of entire projects.

How can you use the commands git log and git diff to view the history of files?
  we use git log to get a list of all commits wit the most recent at the top
  Then we use git diff to compare changes between two repositories

How might using version control make you more confident to make changes that could break something?
  Knowing that you could easily revert back at anytime helps making big changes a lot easier

Now that you have your workspace set up, what do you want to try using Git for?
  For one of my up coming projects
